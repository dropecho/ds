// Generated by Haxe 4.1.5
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace dropecho.ds {
	public class BSPNode : global::dropecho.ds.GraphNode<object, object> {
		
		public BSPNode() : this(null) {}
		
		public BSPNode(object @value) : base(( (( @value == null )) ? (null) : (@value) ), null) {
		}
		
		
		public global::dropecho.ds.BSPNode parent;
		
		public global::dropecho.ds.BSPNode left;
		
		public global::dropecho.ds.BSPNode right;
		
		public virtual global::dropecho.ds.BSPNode createLeft() {
			return this.createLeft(null);
		}
		
		
		public virtual global::dropecho.ds.BSPNode createLeft(object @value) {
			return this.setLeft(new global::dropecho.ds.BSPNode(@value));
		}
		
		
		public virtual global::dropecho.ds.BSPNode createRight() {
			return this.createRight(null);
		}
		
		
		public virtual global::dropecho.ds.BSPNode createRight(object @value) {
			return this.setRight(new global::dropecho.ds.BSPNode(@value));
		}
		
		
		public virtual global::dropecho.ds.BSPNode setLeft(global::dropecho.ds.BSPNode node) {
			this.left = node;
			node.parent = this;
			this.graph.addNode(node);
			this.graph.addUniEdge(this.id, node.id, new global::haxe.lang.Null<object>("left", true));
			this.graph.addUniEdge(node.id, this.id, new global::haxe.lang.Null<object>("parent", true));
			return node;
		}
		
		
		public virtual global::dropecho.ds.BSPNode setRight(global::dropecho.ds.BSPNode node) {
			this.right = node;
			node.parent = this;
			this.graph.addNode(node);
			this.graph.addUniEdge(this.id, node.id, new global::haxe.lang.Null<object>("right", true));
			this.graph.addUniEdge(node.id, this.id, new global::haxe.lang.Null<object>("parent", true));
			return node;
		}
		
		
		public virtual bool isLeaf() {
			if (( this.right == null )) {
				return ( this.left == null );
			}
			else {
				return false;
			}
			
		}
		
		
		public virtual bool isRoot() {
			return ( this.parent == null );
		}
		
		
		public virtual bool hasLeft() {
			return ( this.left != null );
		}
		
		
		public virtual bool hasRight() {
			return ( this.right != null );
		}
		
		
	}
}


