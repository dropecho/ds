// Generated by Haxe 4.1.5
using haxe.root;

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace dropecho.ds {
	public class GraphNode<T, U> {
		
		public GraphNode(global::haxe.lang.Null<T> @value) : this(@value, null) {}
		
		public GraphNode() : this(default(global::haxe.lang.Null<T>), null) {}
		
		public GraphNode(global::haxe.lang.Null<T> @value, string id) {
			unchecked {
				this.id = ( (( id != null )) ? (id) : (global::haxe.root.Std.@string(global::haxe.root.Std.random(10000000))) );
				this.@value = (@value).@value;
			}
		}
		
		
		public string id;
		
		public T @value;
		
		public global::dropecho.ds.Graph<T, U> graph;
		
		public virtual global::haxe.root.Array<string> outNeighborIds() {
			return this.outNeighborIds(null);
		}
		
		
		public virtual global::haxe.root.Array<string> outNeighborIds(global::haxe.lang.Function filter) {
			return this.graph.outNeighborIds(this, filter);
		}
		
		
		public virtual global::haxe.root.Array<object> outNeighbors() {
			return this.outNeighbors(null);
		}
		
		
		public virtual global::haxe.root.Array<object> outNeighbors(global::haxe.lang.Function filter) {
			return this.graph.outNeighbors(this, filter);
		}
		
		
		public virtual global::haxe.root.Array<object> inNeighbors() {
			return new global::haxe.root.Array<object>(new object[]{});
		}
		
		
		public virtual global::haxe.root.Array<string> inNeighborIds() {
			return new global::haxe.root.Array<string>(new string[]{});
		}
		
		
		public virtual global::haxe.root.Array<string> neighborIds() {
			return this.outNeighborIds(null).concat(this.inNeighborIds());
		}
		
		
		public virtual global::haxe.root.Array<object> neighbors() {
			return this.neighbors(null);
		}
		
		
		public virtual global::haxe.root.Array<object> neighbors(global::haxe.lang.Function filter) {
			return this.outNeighbors(null).concat(this.inNeighbors());
		}
		
		
		public virtual U edgeData(string toId) {
			return (this.graph.edgeData(this.id, toId)).@value;
		}
		
		
	}
}


